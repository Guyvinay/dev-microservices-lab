spring.application.name=dev-auth
spring.datasource.url=jdbc:postgresql://localhost:5434/dev_auth
spring.datasource.username=postgres
spring.datasource.password=root
#spring.datasource.url=${DATABASE_URL}
#spring.datasource.username=${POSTGRES_USER}
#spring.datasource.password=${POSTGRES_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
#logging.pattern.console= %d{HH:mm:ss} -%5level --> %msg -- %logger%n

logging.pattern.console=%clr(%d{HH:mm:ss}){blue} - %clr(%5level){cyan} --> %clr(%msg){green} -- %clr(%logger){yellow}%n

logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.web=DEBUG
logging.level.org.springframework.security.authentication=DEBUG

# application.properties
#spring.profiles.active=dev  # Or pod, depending on your environment

#Elastic 1
dev.elastic.properties[0].port=9200
dev.elastic.properties[0].host=localhost
dev.elastic.properties[0].scheme=http

#Elastic 2
dev.elastic.properties[1].port=9300
dev.elastic.properties[1].host=localhost
dev.elastic.properties[1].scheme=http

dev.elastic.credentials.username=admin
dev.elastic.credentials.password=admin

spring.graphql.graphiql.enabled=true
