

package com.dev.redis.generator;

import com.dev.utility.SecurityContextUtil;
import lombok.extern.slf4j.Slf4j;
import org.springframework.cache.annotation.Cacheable;
import org.springframework.cache.interceptor.KeyGenerator;
import org.springframework.stereotype.Component;

import java.lang.reflect.Method;
import java.util.Arrays;

@Component("tenantAwareKeyGenerator")
@Slf4j
public class TenantAwareKeyGenerator implements KeyGenerator {

    @Override
    public Object generate(Object target, Method method, Object... params) {
        String tenantId = SecurityContextUtil.getTenantId();
        String entity = method.getAnnotation(Cacheable.class).cacheNames()[0];
        String paramKey = String.join(":", Arrays.stream(params).map(String::valueOf).toArray(String[]::new));
        String key = String.format("%s:%s:%s", tenantId, entity, paramKey);
        log.info("Key generated by tenantAwareKeyGenerator: {}", key);
        return key;
    }
}
